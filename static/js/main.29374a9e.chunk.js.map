{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","mainFeaturesPost","position","color","palette","common","white","marginBottom","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","backgroundColor","mainFeaturesPostContent","padding","marginTop","cardMedia","paddingTop","cardContent","cardGrid","productsList","App","classes","useState","products","setProducts","value","setValue","open","setOpen","handleClickOpen","handleClose","AppBar","Container","fixed","Toolbar","IconButton","edge","className","aria-label","Typography","variant","Box","mr","Button","Paper","style","backgroundImage","Grid","container","item","md","component","gutterBottom","paragraph","mainContent","maxWidth","align","mainButtons","justify","map","product","xs","sm","Card","card","CardMedia","image","CardContent","CardActions","size","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","newProductsList","filter","handleRemove","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","subtitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29374a9e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport { AppBar, BottomNavigation, BottomNavigationAction, Box, Button, Card, CardActions, CardContent, CardMedia, Container, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, IconButton, Paper, Toolbar, Typography } from '@material-ui/core';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport LayerIcon from '@material-ui/icons/Layers';\nimport PlayerCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    flexGrow: 1\n  },\n  mainFeaturesPost: {\n    position: \"relative\",\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: \"rgba(0,0,0,.3)\",\n  },\n  mainFeaturesPostContent: {\n    position: \"relative\",\n    padding: theme.spacing(6),\n    marginTop: theme.spacing(6),\n  },\n  cardMedia: {\n    paddingTop: \"55%\"\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  cardGrid: {\n    marginTop: theme.spacing(4),\n  }\n}));\n\n// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth';\n\n// import { useAuthState } from 'react-firebase-hooks/auth';\n// import { useCollectionData } from 'react-firebase-hooks/firestore';\n\n// firebase.initializeApp({})\n\nconst productsList = [1,2,3,4,5,6,7,8];\n\nexport const App = () => {\n  const classes = useStyles();\n  const [products, setProducts] = useState(productsList);\n  const [value, setValue] = useState(\"recents\");\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleRemove = (id) => {\n    const newProductsList = products.filter(product => product !== id);\n\n    setProducts(newProductsList);\n    setOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Container fixed>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>Products list</Typography>\n            <Box mr={3}>\n              <Button color=\"inherit\" variant=\"outlined\">Log in</Button>\n            </Box>\n            <Button color=\"secondary\" variant=\"contained\">Sign up</Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n\n      <main>\n        <Paper\n          className={classes.mainFeaturesPost}\n          style={{ backgroundImage: `url(https://source.unsplash.com/random)` }}\n        >\n          <Container fixed>\n            <div className={classes.overlay} />\n            <Grid container>\n              <Grid item md={6}>\n                <div className={classes.mainFeaturesPostContent}>\n                  <Typography\n                    component=\"h1\"\n                    variant=\"h3\"\n                    color=\"inherit\"\n                    gutterBottom\n                  >\n                    Products list\n                  </Typography>\n                  <Typography\n                    component=\"h5\"\n                    color=\"inherit\"\n                    paragraph\n                  >\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                  </Typography>\n                  <Button variant=\"contained\" color=\"secondary\">Learn more</Button>\n                </div>\n              </Grid>\n            </Grid>\n          </Container>\n        </Paper>\n        \n        <div className={classes.mainContent}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              variant=\"h2\"\n              align=\"center\"\n              color=\"TextPrimary\"\n              gutterBottom=\"\"\n            >\n              Products list\n            </Typography>\n            <div className={classes.mainButtons}>\n              <Grid container spacing={3} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">Start Now</Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">Learn More</Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Grid container spacing={4}>\n            {products.map((product) => (\n              <Grid item key={product} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography variant=\"h5\" gutterBottom>\n                      Product name\n                    </Typography>\n                    <Typography>\n                      Product description\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">View</Button>\n                    <Button\n                      size=\"small\"\n                      color=\"secondary\"\n                      onClick={handleClickOpen}\n                      >\n                      Remove\n                    </Button>\n                    <Dialog\n                      open={open}\n                      onClose={handleClose}\n                      aria-labelledby=\"form-dialog-title\"\n                    >\n                      <DialogTitle id=\"remove-dialog-title\">Remove product</DialogTitle>\n                      <DialogContent>\n                        <DialogContentText>Are you sure you want to remove the product?</DialogContentText>\n                      </DialogContent>\n                      <DialogActions>\n                        <Button\n                          size=\"small\"\n                          color=\"secondary\"\n                          onClick={() => handleRemove(product)}\n                        >\n                          Remove\n                        </Button>\n                        <Button\n                          size=\"small\"\n                          onClick={handleClose}\n                          color=\"primary\"\n                        >\n                          Cancel\n                        </Button>\n                      </DialogActions>\n                    </Dialog>\n                    <LayerIcon />\n                    <PlayerCircleFilledIcon />\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n\n      <footer>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>Footer</Typography>\n        <BottomNavigation\n          value={value}\n          onChange={handleChange}\n          className={classes.root}\n        >\n          <BottomNavigationAction\n            label=\"Recents\"\n            value=\"recents\"\n            icon={<RestoreIcon />}\n          />\n          <BottomNavigationAction\n            label=\"Favorites\"\n            value=\"favorites\"\n            icon={<FavoriteIcon />}\n          />\n          <BottomNavigationAction\n            label=\"Nearby\"\n            value=\"nearby\"\n            icon={<LocationOnIcon />}\n          />\n          <BottomNavigationAction\n            label=\"Folder\"\n            value=\"folder\"\n            icon={<FolderIcon />}\n          />\n        </BottomNavigation>\n        <Typography\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n          subtitle={1}\n        >\n          Products list\n        </Typography>\n      </footer>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}